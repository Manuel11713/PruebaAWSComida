{"version":3,"sources":["Complementos/comida.svg","Redux/store.js","Helpers/Header.jsx","Helpers/Comidas.jsx","Views/Home/Home.jsx","Views/Receta/Receta.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","recetasHome","query","createStore","state","action","type","comidas","connect","dispatch","setComidas","style","padding","boxShadow","xs","md","to","height","src","imagen","alt","align","Title","level","margin","xl","Search","placeholder","onSearch","value","console","log","axios","get","then","res","data","results","resetas","map","reseta","image","buscar","width","paddingLeft","mode","selectedKeys","Item","key","shape","UserOutlined","cargando","i","push","sm","marginTop","loading","Meta","avatar","title","description","comida","calificaciÃ³n","Math","ceil","spoonacularScore","id","hoverable","cover","actions","disabled","defaultValue","useEffect","a","recipes","fetchComidas","useState","ingredientes","setIngredientes","instrucciones","setInstrucciones","res1","res2","ingredients","undefined","steps","fectData","Number","find","justify","header","itemLayout","dataSource","renderItem","ingre","name","CheckOutlined","Text","instruc","number","step","App","store","exact","path","component","Home","render","props","match","params","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ec89a12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comida.0a16744a.svg\";","import {createStore} from 'redux';\r\n\r\nlet initialState = {\r\n    recetasHome:null,\r\n    query:null\r\n}\r\n\r\nconst reducerRecetas = (state=initialState,action)=>{\r\n    if(action.type==='CAMBIAR_COMIDAS'){\r\n        return({\r\n            ...state,\r\n            recetasHome:action.comidas\r\n        })\r\n    }\r\n    return state\r\n};\r\n\r\n\r\nexport default createStore(reducerRecetas);","import React from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {Col,Row,Menu,Typography,Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons'\r\nimport imagen from '../Complementos/comida.svg';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = ({setComidas}) =>{\r\n    const buscar=value=>{\r\n        console.log(value)\r\n        axios.get(`https://api.spoonacular.com/recipes/search?query=${value}&number=20&apiKey=cbdf02b947dc4c3183ed95e3c59fa007`)\r\n            .then(res=>{\r\n                console.log(res.data.results);\r\n                let resetas = res.data.results;\r\n                resetas = resetas.map(reseta=>{\r\n                    reseta.image = `https://spoonacular.com/recipeImages/${reseta.image}`;\r\n                    return(reseta);\r\n                });\r\n                setComidas(resetas);\r\n                \r\n            });      \r\n    }\r\n    return(\r\n        <Row style={{padding:'20px 50px',boxShadow: '0 2px 8px #f0f1f2'}}>\r\n            <Col xs={4} md={2}  ><Link to=\"/\"><img height={50} src={imagen} alt=\"logo empresa\"/></Link></Col>\r\n            <Col xs={6} md={4}>\r\n                <Row align=\"middle\" style={{height:\"100%\"}}>\r\n                    <Typography.Title level={3} style={{margin:0}}  >Fishing Food</Typography.Title>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={10} md={6} xl={6}>\r\n                <Row align=\"middle\" style={{height:\"100%\"}}>\r\n                    <Input.Search\r\n                        placeholder=\"solo busquedas en ingles\"\r\n                        onSearch={value=>{buscar(value)}}\r\n                        style={{ width: '100%' }}\r\n                    />\r\n                </Row>\r\n            </Col>\r\n            <Col xs={0} xl={9} style={{paddingLeft:20}}>\r\n                <Row>\r\n                    <Menu mode=\"horizontal\" selectedKeys={['inicio']} >\r\n                        <Menu.Item key=\"inicio\">\r\n                            Inicio\r\n                        </Menu.Item>\r\n                        \r\n                        <Menu.Item key=\"direccion2\">\r\n                            direccion 2\r\n                        </Menu.Item>\r\n                        \r\n                        <Menu.Item key=\"direccion3\">\r\n                            direccion 3\r\n                        </Menu.Item>\r\n                        \r\n                        <Menu.Item key=\"direccion4\">\r\n                            direccion 4\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={2} xl={0} style={{paddingLeft:20}}>\r\n                <Row align=\"middle\" style={{height:\"100%\"}}>\r\n                    <Button  shape=\"circle\">\r\n                        <UserOutlined />\r\n                    </Button>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={1} style={{paddingLeft:20}}>\r\n                <Row align=\"middle\" style={{height:\"100%\"}}>\r\n                    <Button  shape=\"circle\">\r\n                        <UserOutlined />\r\n                    </Button>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\nconst dispatchToProps = dispatch =>{\r\n    return({\r\n        setComidas(comidas){\r\n            dispatch({\r\n                comidas,\r\n                type:'CAMBIAR_COMIDAS'\r\n            });\r\n        }\r\n    });\r\n}\r\nexport default connect(null,dispatchToProps)(Header);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Card, Avatar,Row,Col,Typography,Rate} from 'antd';\r\nconst Comidas = ({comidas})=>{\r\n    \r\n    if(!comidas){\r\n        let cargando=[]\r\n        for(let i=0;i<=20;i++){\r\n            cargando.push(\r\n            <Col xs={24} sm={12} md={8} xl={6}>\r\n                <Card style={{ width: 300, marginTop: 16 }} loading={true}>\r\n                    <Card.Meta\r\n                    avatar={\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                    }\r\n                    title=\"Card title\"\r\n                    description=\"This is the description\"\r\n                    />\r\n                </Card>\r\n            </Col>\r\n            );\r\n        }\r\n        return <Row>{cargando}</Row>;\r\n    }\r\n    //console.log(comidas)\r\n    return(\r\n        <Row style={{padding:'20px 50px'}}>\r\n            \r\n            <Col xs={24}>\r\n                <Typography.Title level={2}>\r\n                    Recetas mas Conocidas\r\n                </Typography.Title>\r\n            </Col>\r\n            {comidas.map(comida=>{\r\n                let calificaciÃ³n = Math.ceil(comida.spoonacularScore/20);\r\n                \r\n                return(\r\n                    <Col xs={24} sm={12} md={8} xl={6} key={comida.id}>\r\n                        <Link to={`/receta/${comida.id}`}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 300,marginTop:10 }}\r\n                                cover={\r\n                                <img\r\n                                    alt=\"example\"\r\n                                    src={comida.image}\r\n                                    style={{height:200}}\r\n                                />\r\n                                }\r\n                                actions={[\r\n                                <Button type=\"link\"  >\r\n                                    Created by \"Chef Famoso\"\r\n                                </Button>\r\n                                ]}\r\n                            >\r\n                                <Card.Meta\r\n                                title={comida.title}\r\n                                \r\n                                />\r\n                                <Rate disabled defaultValue={calificaciÃ³n} />\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                );\r\n            })}\r\n            \r\n        </Row>\r\n    );\r\n}\r\nconst stateToProps=state=>{\r\n    return({\r\n        comidas:state.recetasHome\r\n    });\r\n}\r\n\r\nexport default connect(stateToProps,null)(Comidas);","import React,{useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../../Helpers/Header.jsx';\r\nimport Comidas from '../../Helpers/Comidas.jsx';\r\nimport axios from 'axios';\r\nconst Home = ({setComidas}) =>{\r\n    setComidas(null);\r\n    useEffect(()=>{\r\n        const fetchComidas =async ()=>{\r\n            let comidas = await axios.get('https://api.spoonacular.com/recipes/random?number=20&apiKey=cbdf02b947dc4c3183ed95e3c59fa007');\r\n            setComidas(comidas.data.recipes);\r\n        }\r\n        fetchComidas();\r\n    },[setComidas]);\r\n    return(\r\n        <>\r\n            <Header />\r\n            <Comidas />\r\n        </>\r\n    );\r\n}\r\nconst dispatchToProps = dispatch =>{\r\n    return({\r\n        setComidas(comidas){\r\n            dispatch({\r\n                comidas,\r\n                type:\"CAMBIAR_COMIDAS\"\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport default connect(null,dispatchToProps)(Home);","import React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../../Helpers/Header.jsx';\r\n\r\nimport {CheckOutlined} from '@ant-design/icons'\r\nimport {Col,Row,Breadcrumb,List,Button,Typography} from 'antd';\r\n\r\nconst Receta = ({id,comidas})=>{\r\n    const [ingredientes,setIngredientes] = useState([]);\r\n    const [instrucciones,setInstrucciones] = useState([]);\r\n    useEffect(()=>{\r\n        const fectData = async ()=>{\r\n            let res1 = await axios.get(`https://api.spoonacular.com/recipes/${id}/ingredientWidget.json?apiKey=cbdf02b947dc4c3183ed95e3c59fa007`);\r\n            let res2 = await axios.get(`https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=cbdf02b947dc4c3183ed95e3c59fa007`);\r\n            setIngredientes(res1.data.ingredients);\r\n            if(res2.data[0]===undefined)setInstrucciones(null);\r\n            else setInstrucciones(res2.data[0].steps);\r\n            \r\n        }\r\n        fectData();\r\n    },[id]);\r\n    console.log(comidas)\r\n    if(!comidas)return <Redirect to='/'/>\r\n    id = Number(id);\r\n    let comida = comidas.find(comida=>comida.id===id);\r\n    console.log(comida)\r\n    if(!comida)return <Redirect to='/'/>\r\n    return(\r\n        <>\r\n            <Header/>\r\n            <Breadcrumb style={{padding:30}}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Recetas</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{comida.title}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row style={{padding:\"0 50px 50px 50px\"}}>\r\n                <Col xs={24}>\r\n                    <Row justify={\"center\"}>\r\n                        <img alt={comida.Title} src={comida.image}/>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24}>\r\n                    <List\r\n                        header={<div>Lista de Ingredientes</div>}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={ingredientes}\r\n                        renderItem={ingre => (\r\n                        <List.Item key={ingre.name} >\r\n                            <List.Item.Meta\r\n                            avatar={<Button type=\"primary\"  shape=\"circle\"><CheckOutlined /></Button>}\r\n                            title={<Typography.Text >{ingre.name}</Typography.Text>}\r\n                            />\r\n                        </List.Item>\r\n                        )}\r\n                    />\r\n                    {!instrucciones?<div>No hay instrucciones para esta Receta</div>:\r\n                    <List\r\n                        header={<div>Instrucciones</div>}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={instrucciones}\r\n                        renderItem={instruc => (\r\n                        <List.Item key={instruc.number}  >\r\n                            <List.Item.Meta\r\n                            avatar={<Button type=\"danger\"  shape=\"circle\"><CheckOutlined /></Button>}\r\n                            title={<Typography.Text >{instruc.step}</Typography.Text>}\r\n                            />\r\n                        </List.Item>\r\n                        )}\r\n                    />}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nconst stateToProps=state=>{\r\n    return({\r\n        comidas:state.recetasHome\r\n    })\r\n}\r\n\r\nexport default connect(stateToProps,null)(Receta);","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router, Route , Switch} from 'react-router-dom';\nimport store from './Redux/store';\n\n//Views\nimport Home from './Views/Home/Home.jsx';\nimport Receta from './Views/Receta/Receta.jsx';\nconst App=()=> {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/receta/:id\" render={props=>{\n            return(\n              <Receta id={props.match.params.id}/>\n            );\n          }} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}